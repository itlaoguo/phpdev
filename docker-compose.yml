version: "1.0.0"
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
services:
### NGINX Server #########################################
    nginx:
      image: nginx:alpine
      privileged: true
      volumes:
        - ./sites:/usr/share/nginx/html
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/conf.d:/etc/nginx/conf.d
      ports:
        - "80:80"
        - "443:443"
      networks:
        - frontend
        - backend

### php #########################################
    # php56:
    #   build: ./php/php56/
    #   expose: 
    #     - 9000
    #   privileged: true
    #   volumes:
    #     - ./sites/:/var/www/html/:rw
    #     - ./php/php56/etc/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
    #     - ./php/php56/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
    #     - ./php/php56/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw

    php74:
      build: ./php/php74/
      expose: 
        - 9000
      privileged: true
      volumes:
        - ./sites/:/var/www/html/:rw
        - ./php/php74/etc/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
        - ./php/php74/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
        - ./php/php74/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      networks:
        - backend
      links:
        - "mysql_57"
      environment:
        TZ: Asia/Shanghai
    php80:
      build: ./php/php80/
      expose: 
        - 9000
      privileged: true
      volumes:
        - ./sites/:/var/www/html/:rw
        - ./php/php80/etc/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
        - ./php/php80/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
        - ./php/php80/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      networks:
        - backend
      links:
        - "mysql_57"
      environment:
        TZ: Asia/Shanghai
    php81:
      build: ./php/php81/
      expose: 
        - 9000
      privileged: true
      volumes:
        - ./sites/:/var/www/html/:rw
        - ./php/php81/etc/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
        - ./php/php81/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
        - ./php/php81/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      networks:
        - backend
      links:
        - "mysql_57"
      environment:
        TZ: Asia/Shanghai
    php82:
      build: ./php/php82/
      expose: 
        - 9000
      privileged: true
      volumes:
        - ./sites/:/var/www/html/:rw
        - ./php/php82/etc/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
        - ./php/php82/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
        - ./php/php82/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      networks:
        - backend
      links:
        - "mysql_57"
      environment:
        TZ: Asia/Shanghai

    mysql_57:
        image: mysql:5.7.44
        restart: always
        privileged: true
        tty: true
        container_name: mysql57
        ports:
          - '3306:3306'
        volumes:
          - ./mysql/mysql57/etc/my.cnf:/etc/my.cnf
          # mount your MySQL 5.7 data directory
          - ./mysql/mysql57/data:/var/lib/mysql
        networks:
          - frontend
          - backend
        environment:
          MYSQL_ROOT_PASSWORD: root
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

### MySQL ################################################
    # mysql:
    #   build:
    #     context: ./mysql
    #     args:
    #       - MYSQL_VERSION=${MYSQL_VERSION}
    #   environment:
    #     - MYSQL_DATABASE=${MYSQL_DATABASE}
    #     - MYSQL_USER=${MYSQL_USER}
    #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    #     - TZ=${WORKSPACE_TIMEZONE}
    #   volumes:
    #     - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    #     - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    #   ports:
    #     - "${MYSQL_PORT}:3306"
    #   networks:
    #     - backend

### Redis ################################################
    # redis:
    #   build: ./redis
    #   volumes:
    #     - ${DATA_PATH_HOST}/redis:/data
    #   command: --requirepass ${REDIS_PASSWORD}
    #   ports:
    #     - "${REDIS_PORT}:6379"
    #   networks:
    #     - backend

